# Generated by Django 4.2.4 on 2023-09-08 05:15

import ckeditor.fields
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=50, verbose_name='Title')),
                ('land_id', models.CharField(db_index=True, max_length=12, unique=True, verbose_name='Land Id')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('shamba_id', models.CharField(max_length=50, verbose_name='Proof Of Ownership')),
                ('zipcode', models.CharField(max_length=50, verbose_name='Zipcode')),
                ('county', models.CharField(choices=[('Mombasa', 'Mombasa'), ('Kwale', 'Kwale'), ('Kilifi', 'Kilifi'), ('TanaRiver', 'Tana River'), ('Lamu', 'Lamu'), ('Taita-Taveta', 'Taita-Taveta'), ('Garissa', 'Garissa'), ('Wajir', 'Wajir'), ('Mandera', 'Mandera'), ('Marsabit', 'Marsabit'), ('Isiolo', 'Isiolo'), ('Meru', 'Meru'), ('Tharaka Nithi', 'Tharaka-Nithi'), ('Embu', 'Embu'), ('Kitui', 'Kitui'), ('Machakos', 'Machakos'), ('Makueni', 'Makueni'), ('Nyandarua', 'Nyandarua'), ('Nyeri', 'Nyeri'), ('Kirinyaga', 'Kirinyaga'), ('Muranga', "Murang'a"), ('Kiambu', 'Kiambu'), ('Turkana', 'Turkana'), ('WestPokot', ' West Pokot'), ('Samburu', 'Samburu'), ('TransNzoia', 'Trans Nzoia'), ('Uasin Gishu', 'Uasin Gishu'), ('Elgeyo-Marakwet', 'Elgeyo-Marakwet'), ('Nandi ', 'Nandi'), ('Baringo', 'Baringo'), ('Laikipia', 'Laikipia'), ('Nakuru', 'Nakuru'), ('Narok', 'Narok'), ('Kajiado', 'Kajiado'), ('Kericho', 'Kericho'), ('Bomet', 'Bomet'), ('Kakamega', 'Kakamega'), ('Vihiga', 'Vihiga'), ('Bungoma', 'Bungoma'), ('Busia', 'Busia'), ('Siaya', 'Siaya'), ('Kisumu ', 'Kisumu'), ('HomaBay', 'Homa Bay'), ('Migori', 'Migori'), ('Kisii', 'Kisii'), ('Nyamira', 'Nyamira'), ('Nairobi', 'Nairobi')], db_index=True, max_length=50, verbose_name='County')),
                ('sub_county', models.CharField(choices=[('Sub 1', 'Sub 1'), ('Sub 2', 'Sub 2'), ('Sub 3', 'Sub 3'), ('Sub 4', 'Sub 4'), ('Sub 5', 'Sub 5')], db_index=True, max_length=50, verbose_name='Subcounty')),
                ('location', models.CharField(choices=[('Location 1', 'Location 1'), ('Location 2', 'Location 2'), ('Location 3', 'Location 3'), ('Location 4', 'Location 4'), ('Location 5', 'Location 5')], db_index=True, max_length=50, verbose_name='Location')),
                ('sub_location', models.CharField(choices=[('Sub_loc 1', 'Sub_loc 1'), ('Sub_loc 2', 'Sub_loc 2'), ('Sub_loc 3', 'Sub_loc 3'), ('Sub_loc 4', 'Sub_loc 4'), ('Sub_loc 5', 'Sub_loc 5')], db_index=True, max_length=50, verbose_name='Sublocation')),
                ('village', models.CharField(db_index=True, max_length=50, verbose_name='Village/Estate')),
                ('size', models.FloatField(verbose_name='Land Size')),
                ('size_units', models.CharField(choices=[('Acre', 'Acre'), ('Hectares', 'Hectares')], max_length=50, verbose_name='Size Unit')),
                ('soil_type', ckeditor.fields.RichTextField(verbose_name='Soil type')),
                ('climate', ckeditor.fields.RichTextField(verbose_name='Describe Region Climate')),
                ('previous_farming', ckeditor.fields.RichTextField(verbose_name='Previous Farming Activity')),
                ('water_source', ckeditor.fields.RichTextField(verbose_name='Sourcse of Water')),
                ('electricity_source', ckeditor.fields.RichTextField(verbose_name='Source of Electricity')),
                ('charge', models.IntegerField(verbose_name='Lease Charges')),
                ('existing_infrastructure', ckeditor.fields.RichTextField(verbose_name='Existing Infrastructure')),
                ('existing_machinery', ckeditor.fields.RichTextField(verbose_name='Existing Machinery')),
                ('human_labour', ckeditor.fields.RichTextField(verbose_name='Human Labour')),
                ('recommended_farming', ckeditor.fields.RichTextField(verbose_name='Recommended Farming')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Land',
                'verbose_name_plural': 'Lands',
            },
        ),
        migrations.CreateModel(
            name='LandCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('description', models.TextField(max_length=250)),
                ('is_published', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_land_category', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Land Category',
                'verbose_name_plural': 'Land Categoryies',
            },
        ),
        migrations.CreateModel(
            name='LeasePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('period', models.CharField(max_length=50, verbose_name='Period Of Lease')),
                ('other_period', models.CharField(blank=True, max_length=50, verbose_name='Other')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LeasePeriod',
                'verbose_name_plural': 'LeasePeriods',
            },
        ),
        migrations.CreateModel(
            name='LandTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name')),
                ('is_published', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='land_tag_category', to='Shamba.landcategory', verbose_name='Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='land_tag_user', to=settings.AUTH_USER_MODEL, verbose_name='')),
            ],
            options={
                'verbose_name': 'Land Tag',
                'verbose_name_plural': 'Land Tags',
            },
        ),
        migrations.CreateModel(
            name='LandImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(blank=True, null=True, upload_to='lands', verbose_name='Land Images')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='land_images', to='Shamba.land', verbose_name='')),
            ],
            options={
                'verbose_name': 'LandImages',
                'verbose_name_plural': 'LandImagess',
            },
        ),
        migrations.CreateModel(
            name='LandCoordiates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Coordinates')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shamba.land', verbose_name='')),
            ],
            options={
                'verbose_name': 'LandCoordiates',
                'verbose_name_plural': 'LandCoordiatess',
            },
        ),
        migrations.AddField(
            model_name='land',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Shamba.landcategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='land',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='land',
            name='period_lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lease_period', to='Shamba.leaseperiod', verbose_name='Lease Period'),
        ),
        migrations.AddField(
            model_name='land',
            name='tags',
            field=models.ManyToManyField(to='Shamba.landtag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='BookmarkedLand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookmark_date', models.DateTimeField(auto_now_add=True)),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_lands', to='Shamba.land')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BookmarkedLand',
                'verbose_name_plural': 'BookmarkedLands',
            },
        ),
    ]
